[{"_path":"/blogs/connect-namecheap-to-vercel","_dir":"blogs","_draft":false,"_partial":false,"_locale":"","title":"如何将 Namecheap 域名连接到 Vercel 部署的应用","description":"在这里你将学习如何将你的 namecheap 域名连接到 vercel 部署的应用。","date":"2023年3月1日","image":"/blogs-img/blog1.jpg","alt":"如何将 Namecheap 域名连接到 Vercel 部署的应用","ogImage":"/blogs-img/blog1.jpg","tags":["namecheap","vercel"],"published":true,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"介绍"},"children":[{"type":"text","value":"介绍"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果你从 Namecheap 购买了域名并想将其连接到你的 Vercel 应用，你需要遵循几个步骤。在这篇博客中，我们将指导你完成将 Namecheap 域名与 Vercel 应用连接的过程。"}]},{"type":"element","tag":"h3","props":{"id":"步骤-1向你的-vercel-应用添加自定义域名"},"children":[{"type":"text","value":"步骤 1：向你的 Vercel 应用添加自定义域名"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"第一步是将你的自定义域名添加到 Vercel 应用中。为此，登录你的 Vercel 账户并进入应用仪表板。点击\"设置\"然后点击\"域名\"。点击\"添加域名\"并输入你的自定义域名。然后点击\"添加\"。"}]},{"type":"element","tag":"h3","props":{"id":"步骤-2从-vercel-获取-dns-记录"},"children":[{"type":"text","value":"步骤 2：从 Vercel 获取 DNS 记录"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"一旦你将自定义域名添加到 Vercel 应用中，你需要从 Vercel 获取 DNS 记录。为此，返回\"域名\"部分并点击你刚添加的自定义域名。然后点击\"DNS 记录\"。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"你将看到需要添加到 Namecheap 账户的 DNS 记录列表。这些包括 A 记录、CNAME 记录和 TXT 记录。"}]},{"type":"element","tag":"h3","props":{"id":"步骤-3将-dns-记录添加到-namecheap"},"children":[{"type":"text","value":"步骤 3：将 DNS 记录添加到 Namecheap"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"现在你有了来自 Vercel 的 DNS 记录，你需要将它们添加到你的 Namecheap 账户中。为此，登录你的 Namecheap 账户并进入域名仪表板。点击\"高级 DNS\"然后点击\"添加新记录\"。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"首先添加 A 记录。在\"类型\"下拉菜单中，选择\"A (地址)\"。在\"主机\"字段中，输入\"@\"（不带引号）。在\"值\"字段中，输入来自 Vercel DNS 记录的 IP 地址。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接下来，添加 CNAME 记录。在\"类型\"下拉菜单中，选择\"CNAME (别名)\"。在\"主机\"字段中，输入\"www\"（不带引号）。在\"值\"字段中，输入来自 Vercel DNS 记录的值。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"最后，添加 TXT 记录。在\"类型\"下拉菜单中，选择\"TXT (文本)\"。在\"主机\"字段中，输入\"@\"（不带引号）。在\"值\"字段中，输入来自 Vercel DNS 记录的值。"}]},{"type":"element","tag":"h3","props":{"id":"步骤-4验证-dns-记录"},"children":[{"type":"text","value":"步骤 4：验证 DNS 记录"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"一旦你将 DNS 记录添加到 Namecheap 账户中，你需要验证它们是否正确。为此，返回你的 Vercel 应用仪表板并点击自定义域名。然后点击\"验证 DNS 配置\"。Vercel 将检查 DNS 记录是否已正确设置。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"DNS 记录传播可能需要一些时间，所以请耐心等待。一旦 DNS 记录传播完成，Vercel 将验证它们，你的自定义域名将连接到你的 Vercel 应用。"}]},{"type":"element","tag":"h3","props":{"id":"结论"},"children":[{"type":"text","value":"结论"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"将你的 Namecheap 域名连接到 Vercel 应用是一个相对简单的过程。通过遵循本博客中概述的步骤，你将能够很快连接你的自定义域名。记住要耐心，因为 DNS 记录传播可能需要一些时间。如果你遇到任何问题，请不要犹豫联系 Vercel 支持寻求帮助。"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"介绍","depth":3,"text":"介绍"},{"id":"步骤-1向你的-vercel-应用添加自定义域名","depth":3,"text":"步骤 1：向你的 Vercel 应用添加自定义域名"},{"id":"步骤-2从-vercel-获取-dns-记录","depth":3,"text":"步骤 2：从 Vercel 获取 DNS 记录"},{"id":"步骤-3将-dns-记录添加到-namecheap","depth":3,"text":"步骤 3：将 DNS 记录添加到 Namecheap"},{"id":"步骤-4验证-dns-记录","depth":3,"text":"步骤 4：验证 DNS 记录"},{"id":"结论","depth":3,"text":"结论"}]}},"_type":"markdown","_id":"content:blogs:1. connect-namecheap-to-vercel.md","_source":"content","_file":"blogs/1. connect-namecheap-to-vercel.md","_stem":"blogs/1. connect-namecheap-to-vercel","_extension":"md"},{"_path":"/blogs/fix-tailwindcss-intellisense-in-nuxt3","_dir":"blogs","_draft":false,"_partial":false,"_locale":"","title":"如何修复 Nuxt3 项目中的 TailwindCSS 智能提示","description":"在 Nuxt3 项目中，tailwind css 智能提示似乎无法正常工作。在这篇博客中，我将分享一个解决此问题的方法。","date":"2023年1月26日","image":"/blogs-img/blog2.jpg","alt":"如何修复 nuxt3 项目中的 tailwind 智能提示","ogImage":"/blogs-img/blog2.jpg","tags":["nuxt","tailwindcss"],"published":true,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"问题"},"children":[{"type":"text","value":"问题"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我有一个 Nuxt3 和 TailwindCSS 项目，在 VsCode 中打开。但问题是，在我的项目中 tailwind 智能提示无法正常工作。我尝试重新安装 vscode tailwind 扩展，但问题没有得到很好的解决。后来经过一些研究，我找到了一个"},{"type":"element","tag":"a","props":{"href":"https://github.com/tailwindlabs/tailwindcss-intellisense/issues/663#issuecomment-1316788128","rel":["nofollow"]},"children":[{"type":"text","value":"解决方法"}]},{"type":"text","value":"，今天我在这里分享给大家。"}]},{"type":"element","tag":"h3","props":{"id":"为什么不工作"},"children":[{"type":"text","value":"为什么不工作"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在我们的 nuxt 项目中有一个 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".nuxt"}]},{"type":"text","value":" 目录。Nuxt 在开发中使用 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".nuxt/"}]},{"type":"text","value":" 目录来生成你的 Vue 应用程序。如果我们仔细查看，还有一个名为 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".nuxt/tailwind.config.cjs"}]},{"type":"text","value":" 的文件，所以 tailwind 在同一个项目中找到了两个配置文件，一个在你的根目录中，另一个在你的 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".nuxt"}]},{"type":"text","value":" 目录中。"}]},{"type":"element","tag":"h3","props":{"id":"可能的解决方法"},"children":[{"type":"text","value":"可能的解决方法"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"一个可能的解决方案是，在你的项目中我们可以告诉扩展排除 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".nuxt"}]},{"type":"text","value":" 目录。要在你的工作区中排除 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".nuxt"}]},{"type":"text","value":" 目录："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在项目根目录创建一个 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/.vscode"}]},{"type":"text","value":" 文件夹。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".vscode"}]},{"type":"text","value":" 文件夹内添加一个 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"settings.json"}]},{"type":"text","value":" 文件"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"将下面的代码复制到 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"settings.json"}]},{"type":"text","value":" 文件中"}]}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"// /.vscode/settings.json\n{\n  \"tailwindCSS.files.exclude\": [\n    \"**/.git/**\",\n    \"**/node_modules/**\",\n    \"**/.hg/**\",\n    \"**/.svn/**\",\n    \"**/.nuxt/**\"\n  ]\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// /.vscode/settings.json\n{\n  \"tailwindCSS.files.exclude\": [\n    \"**/.git/**\",\n    \"**/node_modules/**\",\n    \"**/.hg/**\",\n    \"**/.svn/**\",\n    \"**/.nuxt/**\"\n  ]\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"希望现在 tailwind 智能提示能够正常工作了。"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"问题","depth":3,"text":"问题"},{"id":"为什么不工作","depth":3,"text":"为什么不工作"},{"id":"可能的解决方法","depth":3,"text":"可能的解决方法"}]}},"_type":"markdown","_id":"content:blogs:2. fix-tailwindcss-intellisense-in-nuxt3.md","_source":"content","_file":"blogs/2. fix-tailwindcss-intellisense-in-nuxt3.md","_stem":"blogs/2. fix-tailwindcss-intellisense-in-nuxt3","_extension":"md"},{"_path":"/blogs/create-namespace-subdomain-connect-to-vercel","_dir":"blogs","_draft":false,"_partial":false,"_locale":"","title":"如何创建 Namecheap 子域名并连接到 Vercel 应用","description":"在这里我们将学习如何创建 Namecheap 子域名并连接到 Vercel 应用","date":"2023年3月1日","image":"/blogs-img/blog3.jpg","alt":"如何创建 Namecheap 子域名并连接到 Vercel 应用","ogImage":"/blogs-img/blog3.jpg","tags":["nuxt","vercel","namecheap"],"published":true,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"介绍"},"children":[{"type":"text","value":"介绍"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 Namecheap 上创建子域名并将其与 Vercel 部署的应用连接是一个简单的过程。在这篇博客中，我们将指导你完成在 Namecheap 上创建子域名并将其连接到 Vercel 部署应用所需的步骤。"}]},{"type":"element","tag":"h3","props":{"id":"步骤-1在-namecheap-上创建子域名"},"children":[{"type":"text","value":"步骤 1：在 Namecheap 上创建子域名"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"第一步是在 Namecheap 上创建子域名。为此，登录你的 Namecheap 账户并进入域名仪表板。点击\"高级 DNS\"选项卡，然后点击\"添加新记录\"。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"从\"类型\"下拉菜单中选择\"CNAME (别名)\"。在\"主机\"字段中，输入你的子域名名称（例如，如果你希望子域名为\"app.yourdomain.com\"，则输入\"app\"）。在\"值\"字段中，输入你的 Vercel 部署应用的 URL（例如，\"yourapp.vercel.app\"）。"}]},{"type":"element","tag":"h3","props":{"id":"步骤-2验证子域名"},"children":[{"type":"text","value":"步骤 2：验证子域名"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"创建子域名后，你需要验证它是否已正确设置。为此，进入你的 Vercel 部署应用仪表板并点击\"域名\"选项卡。点击\"添加域名\"并输入你的子域名名称。Vercel 将验证子域名并确认它已正确设置。"}]},{"type":"element","tag":"h3","props":{"id":"步骤-3将子域名添加到你的-vercel-部署应用"},"children":[{"type":"text","value":"步骤 3：将子域名添加到你的 Vercel 部署应用"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"现在你的子域名已经验证，你需要将其添加到 Vercel 部署应用中。为此，进入你的应用仪表板并点击\"设置\"。点击\"域名\"然后点击\"添加域名\"。输入你的子域名名称并点击\"添加\"。"}]},{"type":"element","tag":"h3","props":{"id":"步骤-4在-vercel-中验证子域名"},"children":[{"type":"text","value":"步骤 4：在 Vercel 中验证子域名"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"将子域名添加到 Vercel 部署应用后，你需要验证它是否已正确设置。为此，在 Vercel 部署应用仪表板中点击子域名。点击\"验证 DNS 配置\"。Vercel 将检查子域名是否已正确设置，并确认它已连接到你的 Vercel 部署应用。"}]},{"type":"element","tag":"h3","props":{"id":"结论"},"children":[{"type":"text","value":"结论"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"将 Namecheap 上的子域名连接到 Vercel 部署应用是一个简单的过程，可以通过几个步骤完成。通过遵循本博客中概述的步骤，你可以轻松在 Namecheap 上创建子域名并将其连接到 Vercel 部署应用。记住要在 Namecheap 和 Vercel 中都验证你的子域名，以确保它已正确设置。如果你遇到任何问题，请联系 Vercel 支持寻求帮助。"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"介绍","depth":3,"text":"介绍"},{"id":"步骤-1在-namecheap-上创建子域名","depth":3,"text":"步骤 1：在 Namecheap 上创建子域名"},{"id":"步骤-2验证子域名","depth":3,"text":"步骤 2：验证子域名"},{"id":"步骤-3将子域名添加到你的-vercel-部署应用","depth":3,"text":"步骤 3：将子域名添加到你的 Vercel 部署应用"},{"id":"步骤-4在-vercel-中验证子域名","depth":3,"text":"步骤 4：在 Vercel 中验证子域名"},{"id":"结论","depth":3,"text":"结论"}]}},"_type":"markdown","_id":"content:blogs:3. create-namespace-subdomain-connect-to-vercel.md","_source":"content","_file":"blogs/3. create-namespace-subdomain-connect-to-vercel.md","_stem":"blogs/3. create-namespace-subdomain-connect-to-vercel","_extension":"md"},{"_path":"/blogs/fetch-content-data-render-pages","_dir":"blogs","_draft":false,"_partial":false,"_locale":"","title":"如何正确获取 Nuxt Content 数据并在 Nuxt 页面中渲染","description":"在这里我们将学习如何正确获取 Nuxt Content 数据并在 Nuxt 页面中渲染","date":"2023年3月1日","image":"/blogs-img/blog4.jpg","alt":"如何正确获取 Nuxt Content 数据并在 Nuxt 页面中渲染","ogImage":"/blogs-img/blog4.jpg","tags":["nuxt","nuxt-content"],"published":true,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"介绍"},"children":[{"type":"text","value":"介绍"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nuxt.js 是一个用于构建 Vue.js 应用程序的流行开源框架。随着 Nuxt 3 的发布，开发者可以访问新功能和改进来简化开发过程。其中一个功能是 Nuxt Content v2，它允许你以简单高效的方式创建和管理内容。在这篇博客文章中，我们将指导你完成将 Nuxt Content v2 与 Nuxt 3 连接的步骤。"}]},{"type":"element","tag":"h3","props":{"id":"步骤-1安装必要的依赖"},"children":[{"type":"text","value":"步骤 1：安装必要的依赖"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"第一步是安装 Nuxt Content v2 的必要依赖。为此，运行以下命令："}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"npm install @nuxt/content@next\n\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"npm install @nuxt/content@next\n\n"}]}]},{"type":"element","tag":"h3","props":{"id":"步骤-2配置-nuxt-content-v2"},"children":[{"type":"text","value":"步骤 2：配置 Nuxt Content v2"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安装依赖后，你需要在 Nuxt 3 项目中配置 Nuxt Content v2。为此，在项目根目录中创建一个名为 nuxt.config.js 的新文件并添加以下代码："}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"export default {\n  // 启用 Nuxt Content 模块\n  modules: [\n    '@nuxt/content'\n  ],\n\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export default {\n  // 启用 Nuxt Content 模块\n  modules: [\n    '@nuxt/content'\n  ],\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在上面的代码中，我们启用了 Nuxt Content 模块并设置了存储内容的目录。"}]},{"type":"element","tag":"h3","props":{"id":"步骤-3创建内容文件"},"children":[{"type":"text","value":"步骤 3：创建内容文件"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"配置 Nuxt Content v2 后，你可以在指定目录中创建内容文件。默认情况下，Nuxt Content v2 支持 Markdown 和 YAML 文件格式。你可以在 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"content"}]},{"type":"text","value":" 目录中创建一个具有以下结构的新文件："}]},{"type":"element","tag":"pre","props":{"className":["language-md"],"code":"---\ntitle: '你好，世界！'\n---\n\n# 欢迎使用 Nuxt Content v2\n\n这是使用 Nuxt Content v2 创建的 Markdown 文件示例。\n","language":"md","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"---\ntitle: '你好，世界！'\n---\n\n# 欢迎使用 Nuxt Content v2\n\n这是使用 Nuxt Content v2 创建的 Markdown 文件示例。\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在上面的代码中，我们创建了一个带有标题和示例内容的 Markdown 文件。"}]},{"type":"element","tag":"h3","props":{"id":"步骤-4在页面上显示内容"},"children":[{"type":"text","value":"步骤 4：在页面上显示内容"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"现在我们已经创建了内容文件，我们可以在页面上显示内容。为此，在 components 目录中创建一个新的 Vue 组件，代码如下："}]},{"type":"element","tag":"pre","props":{"className":["language-vue"],"code":"<script setup lang=\"ts\">\nconst { path } = useRoute()\nconst articles = await queryContent(path).findOne()\n</script>\n\n<template>\n  <main>\n    <div>\n      <ContentRenderer :value=\"articles\">\n        <template #empty>\n          <p>No content found.</p>\n        </template>\n      </ContentRenderer>\n    </div>\n  </main>\n</template>\n","language":"vue","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<script setup lang=\"ts\">\nconst { path } = useRoute()\nconst articles = await queryContent(path).findOne()\n</script>\n\n<template>\n  <main>\n    <div>\n      <ContentRenderer :value=\"articles\">\n        <template #empty>\n          <p>No content found.</p>\n        </template>\n      </ContentRenderer>\n    </div>\n  </main>\n</template>\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"介绍","depth":3,"text":"介绍"},{"id":"步骤-1安装必要的依赖","depth":3,"text":"步骤 1：安装必要的依赖"},{"id":"步骤-2配置-nuxt-content-v2","depth":3,"text":"步骤 2：配置 Nuxt Content v2"},{"id":"步骤-3创建内容文件","depth":3,"text":"步骤 3：创建内容文件"},{"id":"步骤-4在页面上显示内容","depth":3,"text":"步骤 4：在页面上显示内容"}]}},"_type":"markdown","_id":"content:blogs:4. fetch-content-data-render-pages.md","_source":"content","_file":"blogs/4. fetch-content-data-render-pages.md","_stem":"blogs/4. fetch-content-data-render-pages","_extension":"md"},{"_path":"/blogs/vue3-awesome-library","_dir":"blogs","_draft":false,"_partial":false,"_locale":"","title":"Vue3 的一些优秀库","description":"Vue.js 是一个用于构建 Web 应用程序的流行 JavaScript 框架。在这篇博客文章中，我们将向你介绍不同类别中一些优秀的 Vue.js 库。","date":"2023年1月1日","image":"/blogs-img/blog5.jpg","alt":"Vue3 的一些优秀库","ogImage":"/blogs-img/blog5.jpg","tags":["vue","javascript"],"published":true,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"介绍"},"children":[{"type":"text","value":"介绍"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vue.js 是一个用于构建 Web 应用程序的流行 JavaScript 框架。它提供了很大的灵活性和易用性，使其成为许多开发者的首选。Vue.js 的优势之一是其丰富的库生态系统。在这篇博客文章中，我们将向你介绍不同类别中一些优秀的 Vue.js 库。"}]},{"type":"element","tag":"h3","props":{"id":"必备库"},"children":[{"type":"text","value":"必备库"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"当你开始一个新项目时，有些库是必须的，这是我的清单"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Vue Router"}]},{"type":"text","value":": Vue Router 是 Vue.js 的官方路由器。它与 Vue.js 核心深度集成，使用 Vue.js 构建单页应用程序变得轻而易举"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Pinia"}]},{"type":"text","value":": Pinia 始于 2019 年 11 月左右的一个实验，旨在重新设计 Vue 的 Store 在 Composition API 下的样子。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"VueUse"}]},{"type":"text","value":": VueUse 是基于 Composition API 的实用函数集合。我们假设你在继续之前已经熟悉了 Composition API 的基本思想。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Vitest"}]},{"type":"text","value":": Vitest 是一个由 Vite 驱动的极快单元测试框架。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Vue Macro"}]},{"type":"text","value":": Vue Macros 是一个实现 Vue 尚未正式实现的提案或想法的库。这意味着它将探索和扩展 Vue 的更多功能和语法糖。"}]}]},{"type":"element","tag":"h3","props":{"id":"ui-库"},"children":[{"type":"text","value":"UI 库"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"UI 库为构建用户界面提供预构建的组件和样式。以下是一些流行的 Vue.js UI 库："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Naive UI"}]},{"type":"text","value":": 一个相当完整的 Vue 3 组件库，主题可定制，使用 TypeScript，快速且有趣"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Vuetify"}]},{"type":"text","value":": Vue 组件框架 Vuetify 是一个无需设计技能的 UI 库，拥有精美手工制作的 Vue 组件。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Vuestic"}]},{"type":"text","value":": 你可以创建一个新项目或将 Vuestic UI 集成到现有应用程序中。有三种方法可以创建新的 Vuestic 应用程序。它们大多相同并提供相同的功能。"}]}]},{"type":"element","tag":"h3","props":{"id":"其他"},"children":[{"type":"text","value":"其他"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"VueFire"}]},{"type":"text","value":": VueFire Vue.js 的官方 Firebase 绑定"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Vue I18n"}]},{"type":"text","value":": Vue I18n Vue.js 的国际化插件"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Vue Auto Animate"}]},{"type":"text","value":": 用一行代码为你的应用程序添加动画。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Vuelidate"}]},{"type":"text","value":": Vuelidate 被认为是基于模型的，因为验证规则定义在你的数据旁边，验证树结构与数据模型结构匹配。"}]}]},{"type":"element","tag":"h3","props":{"id":"结论"},"children":[{"type":"text","value":"结论"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在这篇博客文章中，我们向你介绍了不同类别中一些优秀的 Vue.js 库。这些库可以帮助你使用 Vue.js 构建更好、更引人入胜的 Web 应用程序。记住要根据你的项目需求选择合适的库，并始终参考文档以获取使用和集成说明。如果你遇到任何问题，请联系 Vue.js 社区寻求帮助。"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"介绍","depth":3,"text":"介绍"},{"id":"必备库","depth":3,"text":"必备库"},{"id":"ui-库","depth":3,"text":"UI 库"},{"id":"其他","depth":3,"text":"其他"},{"id":"结论","depth":3,"text":"结论"}]}},"_type":"markdown","_id":"content:blogs:5. vue3-awesome-library.md","_source":"content","_file":"blogs/5. vue3-awesome-library.md","_stem":"blogs/5. vue3-awesome-library","_extension":"md"},{"_path":"/blogs/how-to-fix-vuex-type-issue","_dir":"blogs","_draft":false,"_partial":false,"_locale":"","title":"如何修复 Vuex 类型问题","description":"在最近的 Vue 项目中，我们发现 Vuex 类型无法正常工作。我们将修复该类型问题并使 Vuex 类型可用","date":"2024年6月9日","image":"/blogs-img/blog6.jpg","alt":"如何修复 Vuex 类型问题","ogImage":"/blogs-img/blog6.jpg","tags":["vue","vuex"],"published":true,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"介绍"},"children":[{"type":"text","value":"介绍"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在我们 Vue 项目的最新版本中，当我们尝试添加 Vuex 时，我们看到类型错误和找不到 Vuex 类型。我们可以轻松修复该问题。"}]},{"type":"element","tag":"h3","props":{"id":"如何修复该问题"},"children":[{"type":"text","value":"如何修复该问题"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在你的根项目中创建一个 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"vuex.d.ts"}]},{"type":"text","value":" 文件。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在该文件中粘贴此代码"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"declare module 'vuex' {\n  export * from 'vuex/types/index.d.ts'\n  export * from 'vuex/types/helpers.d.ts'\n  export * from 'vuex/types/logger.d.ts'\n  export * from 'vuex/types/vue.d.ts'\n}\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"declare module 'vuex' {\n  export * from 'vuex/types/index.d.ts'\n  export * from 'vuex/types/helpers.d.ts'\n  export * from 'vuex/types/logger.d.ts'\n  export * from 'vuex/types/vue.d.ts'\n}\n"}]}]},{"type":"element","tag":"ol","props":{"start":3},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"就是这样。你可以继续了。"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"介绍","depth":3,"text":"介绍"},{"id":"如何修复该问题","depth":3,"text":"如何修复该问题"}]}},"_type":"markdown","_id":"content:blogs:6. how-to-fix-vuex-type-issue.md","_source":"content","_file":"blogs/6. how-to-fix-vuex-type-issue.md","_stem":"blogs/6. how-to-fix-vuex-type-issue","_extension":"md"},{"_path":"/blogs/cactus","_dir":"blogs","_draft":false,"_partial":false,"_locale":"","title":"仙人球开花","description":"仙人球开花。","date":"2025年6月21日","image":"/blogs-img/blog7.jpg","alt":"仙人球开花","ogImage":"/blogs-img/blog7.jpg","tags":["life"],"published":true,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"介绍"},"children":[{"type":"text","value":"介绍"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这是我种的仙人球中开的第一朵🌸"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"今天早上起来，发现我精心照料的仙人球终于开花了！这朵粉色的小花虽然不大，但对我来说意义重大。"}]},{"type":"element","tag":"h3","props":{"id":"养护心得"},"children":[{"type":"text","value":"养护心得"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"仙人球虽然被称为\"懒人植物\"，但要让它开花还是需要一些技巧的："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"光照充足"}]},{"type":"text","value":"：仙人球需要充足的阳光，我把它放在南向的窗台上"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"适量浇水"}]},{"type":"text","value":"：虽然耐旱，但生长期还是需要适量的水分"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"温差刺激"}]},{"type":"text","value":"：适当的昼夜温差有助于花芽分化"}]}]},{"type":"element","tag":"h3","props":{"id":"开花的喜悦"},"children":[{"type":"text","value":"开花的喜悦"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"看到这朵小花绽放的那一刻，所有的等待都是值得的。它提醒我，美好的事物往往需要时间和耐心。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"希望这朵花能给大家带来一些温暖和希望！"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"介绍","depth":3,"text":"介绍"},{"id":"养护心得","depth":3,"text":"养护心得"},{"id":"开花的喜悦","depth":3,"text":"开花的喜悦"}]}},"_type":"markdown","_id":"content:blogs:7. cactus.md","_source":"content","_file":"blogs/7. cactus.md","_stem":"blogs/7. cactus","_extension":"md"},{"_path":"/blogs/kotlin","_dir":"blogs","_draft":false,"_partial":false,"_locale":"","title":"Kotlin 学习记录","description":"Kotlin","date":"2025年6月24日","image":"/blogs-img/kot.png","alt":"Kotlin","ogImage":"/blogs-img/kot.png","tags":["kotlin"],"published":true,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"简介"},"children":[{"type":"text","value":"简介"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这是我的kotlin学习记录"}]},{"type":"element","tag":"h3","props":{"id":"_1-了解-kotlin"},"children":[{"type":"text","value":"1. 了解 kotlin"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Kotlin 是一种基于 JVM 的静态类型编程语言，由 JetBrains 开发。它在 Java 虚拟机上运行，与 Java 代码兼容，并且可以使用 Java 库。Kotlin 被设计为一种更简洁、更安全、更现代的编程语言，它的语法简洁，支持函数式编程和面向对象编程。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Kotlin 具有以下特点："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"静态类型：Kotlin 是一种静态类型语言，这意味着变量的类型必须在编译时确定。这可以减少运行时错误，并提高代码的可靠性。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"空安全：Kotlin 具有空安全功能，这意味着变量不能存储空值。这可以减少空指针异常，并提高代码的可靠性。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"互操作性：Kotlin 可以与 Java 代码互操作，这意味着您可以在 Kotlin 项目中使用 Java 库。这也意味着您可以在 Java 项目中使用 Kotlin 代码。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"函数式编程：Kotlin 支持函数式编程，这意味着您可以使用高阶函数、lambda 表达式和集合等函数式编程概念。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"面向对象编程：Kotlin 支持面向对象编程，这意味着您可以使用类、对象、接口和继承等面向对象编程概念。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"扩展函数：Kotlin 支持扩展函数，这意味着您可以为现有的类添加新的函数，而无需继承该类。"}]}]},{"type":"element","tag":"h3","props":{"id":"_2-kotlin-类型"},"children":[{"type":"text","value":"2. kotlin 类型"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"简介","depth":3,"text":"简介"},{"id":"_1-了解-kotlin","depth":3,"text":"1. 了解 kotlin"},{"id":"_2-kotlin-类型","depth":3,"text":"2. kotlin 类型"}]}},"_type":"markdown","_id":"content:blogs:8. kotlin.md","_source":"content","_file":"blogs/8. kotlin.md","_stem":"blogs/8. kotlin","_extension":"md"}]