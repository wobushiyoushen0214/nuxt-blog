// ROLLUP_NO_REPLACE 
 const _8__kotlin = "{\"parsed\":{\"_path\":\"/blogs/kotlin\",\"_dir\":\"blogs\",\"_draft\":false,\"_partial\":false,\"_locale\":\"\",\"title\":\"Kotlin 学习记录\",\"description\":\"Kotlin\",\"date\":\"2025年6月24日\",\"image\":\"/blogs-img/kot.png\",\"alt\":\"Kotlin\",\"ogImage\":\"/blogs-img/kot.png\",\"tags\":[\"kotlin\"],\"published\":true,\"body\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"简介\"},\"children\":[{\"type\":\"text\",\"value\":\"简介\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这是我的kotlin学习记录\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"_1-了解-kotlin\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 了解 kotlin\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Kotlin 是一种基于 JVM 的静态类型编程语言，由 JetBrains 开发。它在 Java 虚拟机上运行，与 Java 代码兼容，并且可以使用 Java 库。Kotlin 被设计为一种更简洁、更安全、更现代的编程语言，它的语法简洁，支持函数式编程和面向对象编程。\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Kotlin 具有以下特点：\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"静态类型：Kotlin 是一种静态类型语言，这意味着变量的类型必须在编译时确定。这可以减少运行时错误，并提高代码的可靠性。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"空安全：Kotlin 具有空安全功能，这意味着变量不能存储空值。这可以减少空指针异常，并提高代码的可靠性。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"互操作性：Kotlin 可以与 Java 代码互操作，这意味着您可以在 Kotlin 项目中使用 Java 库。这也意味着您可以在 Java 项目中使用 Kotlin 代码。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数式编程：Kotlin 支持函数式编程，这意味着您可以使用高阶函数、lambda 表达式和集合等函数式编程概念。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"面向对象编程：Kotlin 支持面向对象编程，这意味着您可以使用类、对象、接口和继承等面向对象编程概念。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"扩展函数：Kotlin 支持扩展函数，这意味着您可以为现有的类添加新的函数，而无需继承该类。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"_2-kotlin-类型\"},\"children\":[{\"type\":\"text\",\"value\":\"2. kotlin 类型\"}]}],\"toc\":{\"title\":\"\",\"searchDepth\":2,\"depth\":2,\"links\":[{\"id\":\"简介\",\"depth\":3,\"text\":\"简介\"},{\"id\":\"_1-了解-kotlin\",\"depth\":3,\"text\":\"1. 了解 kotlin\"},{\"id\":\"_2-kotlin-类型\",\"depth\":3,\"text\":\"2. kotlin 类型\"}]}},\"_type\":\"markdown\",\"_id\":\"content:blogs:8. kotlin.md\",\"_source\":\"content\",\"_file\":\"blogs/8. kotlin.md\",\"_stem\":\"blogs/8. kotlin\",\"_extension\":\"md\"},\"hash\":\"HYb1iqZZDN\"}";

export { _8__kotlin as default };
//# sourceMappingURL=8. kotlin.mjs.map
